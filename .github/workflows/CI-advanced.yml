name: CI (advanced)

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - master
      - main
  pull_request:

# the `concurrency` settings ensure that not too many CI jobs run in parallel
concurrency:
  # group by workflow and ref; the last slightly strange component ensures that for pull
  # requests, we limit to 1 concurrent job, but for the default repository branch we don't
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref_name != github.event.repository.default_branch || github.run_number }}
  # Cancel intermediate builds, but only if it is a pull request build.
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  # The CI test job
  test:
    name: ${{ matrix.gap-branch }} ${{ matrix.ABI }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        gap-branch:
          - master
          - stable-4.15
          - stable-4.14
          - stable-4.13
          - stable-4.12
          - stable-4.11
          - stable-4.10
        ABI: ['']
        include:
          - gap-branch: master # add one test in 32bit mode -- nostly for packages with kernel extension
            ABI: 32

    steps:
      - uses: actions/checkout@v5
      - uses: gap-actions/setup-gap@v2
        with:
          GAP_PKGS_TO_CLONE: "nq"
          GAP_PKGS_TO_BUILD: "io profiling nq" # io & profiling must always be built for coverage tracking
          GAPBRANCH: ${{ matrix.gap-branch }}
          ABI: ${{ matrix.ABI }}
      - name: 'Install additional dependencies'
        run: |
          if [ "${{matrix.ABI}}" = "32" ]; then
            sudo apt-get install libmpfr-dev:i386  # you can remove this if you don't need 32 bit builds
          else
            sudo apt-get install libmpfr-dev
          fi
      - uses: gap-actions/build-pkg@v1
        with:
          ABI: ${{ matrix.ABI }}
      - uses: gap-actions/run-pkg-tests@v3
      - uses: gap-actions/run-pkg-tests@v3
        with:
          only-needed: true
      - uses: gap-actions/process-coverage@v2
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # The documentation job
  manual:
    name: Build manuals
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: gap-actions/setup-gap@v2
      - uses: gap-actions/build-pkg-docs@v1
        with:
          use-latex: 'true'
      - name: 'Upload documentation'
        uses: actions/upload-artifact@v4
        with:
          name: manual
          path: ./doc/manual.pdf
          if-no-files-found: error
